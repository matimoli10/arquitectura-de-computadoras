15)Escribir un programa que implemente un conteo regresivo a partir de un valor ingresado desde el teclado. El conteo
debe comenzar al presionarse la tecla F10. El tiempo transcurrido debe mostrarse en pantalla, actualiz√°ndose el valor cada
segundo.



 pic equ 20H
timer equ 10H
 int0 equ 5
 int1 equ 10

ORG 20
  t_f10 dw f10

ORG 40 
  clk dw int_clk

ORG 1000H
 msj3 db "lleva "
  seg db 30H
      db 30H
      db 3AH
      db 30H
      db 30H
      db " "
  fin db ?
horas db ?
fin3 db ?
 msj2 db " el caracter invalido"
 fin2 db ?
 
ORG 1500H
   num db ?

ORG 3000H 
    f10: push ax
         push bx 
         cmp dl,0
         jnz detengo 
         mov bx,offset num 
ingrese: int 6 
         mov al,num 
         sub al,30H
         cmp al,10 
         js es_num
         mov bx,offset msj2
         mov al,offset fin2-offset msj2 
         int 7 
         jmp ingrese 
 es_num: cmp dl,0
         jnz detengo    
         cli
           mov al,11111100b
           out pic+1,al 
           mov al,int1
           out pic+5,al 
           mov al,10
           out timer+1,al
         sti 
         inc dl 
         jmp fin_f10
detengo: mov bx, timer
         mov dh,[bx]
         cli 
           mov al,11111110b
           out pic+1,al
           mov al,20H
           out pic,al 
           mov al,0
           out timer,al 
         sti 
         dec dl 
         cmp cl,0
         jnz mas_1hs
         mov bx,offset msj3
         mov al,offset fin-offset msj3
         int 7
         jmp salir 
mas_1hs: mov bx,offset msj3
         mov al,offset fin3-offset msj3
         int 7  
         jmp salir
fin_f10: mov al,20H
         out pic,al
         mov al,num
         sub al,30H
         out timer,al
  salir: pop bx 
         pop ax 
         iret 

ORG 3500H
  int_clk: push ax
           push bx 
           cmp seg+4,39h
           jz siguiente
           inc seg+4
           jmp reset
siguiente: inc seg+3
           mov seg+4,30H
           cmp seg+3,36H
           jz minuto 
           jmp reset 
   minuto: inc seg+1
           mov seg+3,30H
           cmp seg+1,39H
           jz minutos 
           jmp reset 
  minutos: inc seg 
           mov seg+1,30H
           cmp seg,36H
           jz limite 
           jmp reset 
   limite: inc cl 
           mov horas,cl 
           mov bx, offset msj3
           mov al, offset fin3- offset msj3
           mov bx, offset seg+4
           mov byte ptr[bx],30h
           dec bx 
           mov byte ptr[bx],30h
           dec bx 
           dec bx 
           mov byte ptr [bx],30h
           dec bx    
           mov byte ptr[bx],30h
           dec bx 
           mov bx,offset seg
           mov al,offset fin-offset seg  
    reset: int 7 
           mov al,0 
           out timer,al 
           mov al,20H
           out pic,al 
           pop bx 
           pop ax
           iret
  
ORG 2000H
      cli
        mov al,11111110b
        out pic+1,al
        mov al,5 
        out pic+4,al  
        mov bx,offset seg
        mov al,offset fin-offset seg 
        mov dx,0
        mov cl,0 
      sti 
lazo: jmp lazo
      int 0 
END
