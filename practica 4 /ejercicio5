5) El siguiente programa multiplica por 2 los elementos de un arreglo llamado datos y genera un nuevo arreglo llamado res.
Ejecutar el programa en el simulador winmips64 con la opción Delay Slot habilitada.

.data
cant: .word 8
datos: .word 1, 2, 3, 4, 5, 6, 7, 8
res: .word 0
.code
dadd r1, r0, r0
ld r2, cant(r0)
loop: ld r3, datos(r1)
daddi r2, r2, -1
dsll r3, r3, 1
sd r3, res(r1)
daddi r1, r1, 8
bnez r2, loop
nop
halt

a) ¿Qué efecto tiene habilitar la opción Delay Slot (salto retardado)?.
b) ¿Con qué fin se incluye la instrucción NOP? ¿Qué sucedería si no estuviera?.
c) Tomar nota de la cantidad de ciclos, la cantidad de instrucciones y los CPI luego de ejecutar el programa.
d) Modificar el programa para aprovechar el „Delay Slot‟ ejecutando una instrucción útil. Simular y comparar número de
ciclos, instrucciones y CPI obtenidos con los de la versión anterior.

a) el efecto que tiene que al leer el salto, leer la instruccion siguiente y luego salta, esto hace que no me genere branch taken, pero hay que tener en cuenta que te puede llegar a leer una instruccion que no deveria, ya que leer una instruccion mas 
